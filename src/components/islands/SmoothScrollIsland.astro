---
// src/components/islands/SmoothScrollIsland.astro
// Lenis + GSAP ScrollTrigger con guard de reduced motion.
// Nota: SIN `is:inline` para que Astro/Vite procese el m√≥dulo y resuelva imports.
---
<div aria-hidden="true" class="hidden"></div>

<script>
  const prefersReduced = window.matchMedia('(prefers-reduced-motion: reduce)').matches;

  // NUNCA uses `return` en top-level de un m√≥dulo; mejor una condici√≥n que envuelva el init.
  if (!prefersReduced) {
    (async () => {
      const { default: Lenis } = await import('lenis');
      const { default: gsap } = await import('gsap');
      const { default: ScrollTrigger } = await import('gsap/ScrollTrigger');
      gsap.registerPlugin(ScrollTrigger);

      // ‚öôÔ∏è Config base (anchors, smooth sin autoRaf porque lo mover√° el ticker de GSAP)
      const lenis = new Lenis({
        autoRaf: false,
        smoothWheel: true,
        anchors: true, // habilita anclas con Lenis
      });

      // üîÑ Sincroniza Lenis ‚Üî ScrollTrigger (patr√≥n recomendado)
      lenis.on('scroll', ScrollTrigger.update);
      gsap.ticker.add((time) => lenis.raf(time * 1000));
      gsap.ticker.lagSmoothing(0);

      // Ajuste al refrescar/resize
      ScrollTrigger.addEventListener('refresh', () => lenis.resize());
      ScrollTrigger.refresh();

      // Debug opcional
      console.log('[SmoothScrollIsland] Lenis + ScrollTrigger inicializados');
      // window.lenis = lenis;
    })();
  } else {
    console.log('[SmoothScrollIsland] Reduced motion activo. No se inicializa Lenis/GSAP.');
  }
</script>
